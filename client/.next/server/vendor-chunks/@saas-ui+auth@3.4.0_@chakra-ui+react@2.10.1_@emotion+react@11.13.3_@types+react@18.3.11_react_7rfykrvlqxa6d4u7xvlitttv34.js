"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@saas-ui+auth@3.4.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react_7rfykrvlqxa6d4u7xvlitttv34";
exports.ids = ["vendor-chunks/@saas-ui+auth@3.4.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react_7rfykrvlqxa6d4u7xvlitttv34"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@saas-ui+auth@3.4.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react_7rfykrvlqxa6d4u7xvlitttv34/node_modules/@saas-ui/auth/dist/index.mjs":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@saas-ui+auth@3.4.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react_7rfykrvlqxa6d4u7xvlitttv34/node_modules/@saas-ui/auth/dist/index.mjs ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   AuthContext: () => (/* binding */ AuthContext),\n/* harmony export */   AuthFormContainer: () => (/* binding */ AuthFormContainer),\n/* harmony export */   AuthFormDivider: () => (/* binding */ AuthFormDivider),\n/* harmony export */   AuthFormSuccess: () => (/* binding */ AuthFormSuccess),\n/* harmony export */   AuthFormTitle: () => (/* binding */ AuthFormTitle),\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   Authenticated: () => (/* binding */ Authenticated),\n/* harmony export */   ForgotPasswordForm: () => (/* binding */ ForgotPasswordForm),\n/* harmony export */   ForgotPasswordView: () => (/* binding */ ForgotPasswordView),\n/* harmony export */   LoginButton: () => (/* binding */ LoginButton),\n/* harmony export */   LoginView: () => (/* binding */ LoginView),\n/* harmony export */   MagicLinkForm: () => (/* binding */ MagicLinkForm),\n/* harmony export */   OtpForm: () => (/* binding */ OtpForm),\n/* harmony export */   OtpView: () => (/* binding */ OtpView),\n/* harmony export */   PasswordForm: () => (/* binding */ PasswordForm),\n/* harmony export */   ProviderButton: () => (/* binding */ ProviderButton),\n/* harmony export */   Providers: () => (/* binding */ Providers),\n/* harmony export */   SignupView: () => (/* binding */ SignupView),\n/* harmony export */   UpdatePasswordForm: () => (/* binding */ UpdatePasswordForm),\n/* harmony export */   UpdatePasswordView: () => (/* binding */ UpdatePasswordView),\n/* harmony export */   VIEWS: () => (/* binding */ VIEWS),\n/* harmony export */   useAuth: () => (/* binding */ useAuth),\n/* harmony export */   useCurrentUser: () => (/* binding */ useCurrentUser),\n/* harmony export */   useLogin: () => (/* binding */ useLogin),\n/* harmony export */   useOtp: () => (/* binding */ useOtp),\n/* harmony export */   useResetPassword: () => (/* binding */ useResetPassword),\n/* harmony export */   useSignUp: () => (/* binding */ useSignUp),\n/* harmony export */   useUpdatePassword: () => (/* binding */ useUpdatePassword)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.14_@babel+core@7.25.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @saas-ui/hooks */ \"(ssr)/./node_modules/.pnpm/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu/node_modules/@saas-ui/hooks/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.14_@babel+core@7.25.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @saas-ui/forms */ \"(ssr)/./node_modules/.pnpm/@saas-ui+forms@2.7.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_wo2mqmz6qtlbleyrni4uuhkoga/node_modules/@saas-ui/forms/dist/index.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/system/use-theme.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/icon/icon.mjs\");\n/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/utils */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+utils@2.2.1_react@18.3.1/node_modules/@chakra-ui/utils/dist/esm/call-all.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/button/button.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/system/providers.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/system/use-style-config.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+styled-system@2.11.1_react@18.3.1/node_modules/@chakra-ui/styled-system/dist/esm/theming-props.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/system/factory.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/divider/divider.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/typography/text.mjs\");\n/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @chakra-ui/utils */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+utils@2.2.1_react@18.3.1/node_modules/@chakra-ui/utils/dist/esm/cx.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+hooks@2.4.1_react@18.3.1/node_modules/@chakra-ui/hooks/dist/esm/use-controllable-state.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/link/link.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/alert/alert.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/alert/alert-icon.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/alert/alert-title.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react@18.3.1__@emotion+st_qr3bsdifyrf4uu5yigd45p4x2m/node_modules/@chakra-ui/react/dist/esm/alert/alert-description.mjs\");\n/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @chakra-ui/utils */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+utils@2.2.1_react@18.3.1/node_modules/@chakra-ui/utils/dist/esm/run-if-fn.mjs\");\n/* __next_internal_client_entry_do_not_use__ Auth,AuthContext,AuthFormContainer,AuthFormDivider,AuthFormSuccess,AuthFormTitle,AuthProvider,Authenticated,ForgotPasswordForm,ForgotPasswordView,LoginButton,LoginView,MagicLinkForm,OtpForm,OtpView,PasswordForm,ProviderButton,Providers,SignupView,UpdatePasswordForm,UpdatePasswordView,VIEWS,useAuth,useCurrentUser,useLogin,useOtp,useResetPassword,useSignUp,useUpdatePassword auto */ // src/provider.tsx\n\n\n\nvar { createContext, useState, useContext, useEffect, useCallback } = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)));\nvar createAuthContext = ()=>{\n    return createContext(null);\n};\nvar AuthContext = createAuthContext();\nvar AuthProvider = ({ refetchUserOnWindowFocus = true, onRestoreAuthState, onLoadUser = ()=>Promise.resolve(null), onSignup = ()=>Promise.resolve(null), onLogin = ()=>Promise.resolve(null), onVerifyOtp = ()=>Promise.resolve(null), onLogout = ()=>Promise.resolve(), onAuthStateChange, onGetToken, onResetPassword, onUpdatePassword, children })=>{\n    const [isAuthenticated, setAuthenticated] = useState(false);\n    const [user, setUser] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const restoreRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const isFetchingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    useEffect(()=>{\n        if (onAuthStateChange) {\n            const unsubscribe = onAuthStateChange((user2)=>{\n                setAuthenticated(!!user2);\n            });\n            return ()=>{\n                unsubscribe == null ? void 0 : unsubscribe();\n            };\n        }\n    }, []);\n    useEffect(()=>{\n        const restoreState = async ()=>{\n            restoreRef.current = true;\n            await (onRestoreAuthState == null ? void 0 : onRestoreAuthState());\n            await loadUser();\n            restoreRef.current = false;\n        };\n        if (!restoreRef.current) {\n            restoreState();\n        }\n    }, [\n        onRestoreAuthState\n    ]);\n    const loadUser = useCallback(async ()=>{\n        try {\n            if (isFetchingRef.current) {\n                return;\n            }\n            if ((typeof onGetToken === \"undefined\" || await onGetToken()) && !isFetchingRef.current) {\n                isFetchingRef.current = true;\n                const user2 = await onLoadUser();\n                if (user2) {\n                    setUser(user2);\n                    setAuthenticated(true);\n                } else {\n                    setAuthenticated(false);\n                    setUser(null);\n                }\n            }\n        } catch  {\n            setAuthenticated(false);\n            setUser(null);\n        } finally{\n            isFetchingRef.current = false;\n            setLoading(false);\n        }\n    }, [\n        onLoadUser,\n        onGetToken\n    ]);\n    useEffect(()=>{\n        if (!refetchUserOnWindowFocus) {\n            return;\n        }\n        const onWindowFocus = async ()=>{\n            loadUser();\n        };\n        window.addEventListener(\"focus\", onWindowFocus);\n        return ()=>{\n            if (onWindowFocus) {\n                window.removeEventListener(\"focus\", onWindowFocus);\n            }\n        };\n    }, [\n        loadUser,\n        refetchUserOnWindowFocus\n    ]);\n    const signUp = useCallback(async (params, options)=>{\n        const result = await onSignup(params, options);\n        loadUser();\n        return result;\n    }, [\n        onSignup\n    ]);\n    const logIn = useCallback(async (params, options)=>{\n        const result = await onLogin(params, options);\n        loadUser();\n        return result;\n    }, [\n        onLogin\n    ]);\n    const logOut = useCallback(async (options)=>{\n        await onLogout(options);\n        setUser(null);\n        setAuthenticated(false);\n    }, [\n        onLogout\n    ]);\n    const verifyOtp = useCallback(async (params, options)=>{\n        const result = await onVerifyOtp(params, options);\n        return result;\n    }, [\n        onVerifyOtp\n    ]);\n    const resetPassword = useCallback(async (params, options)=>{\n        return await (onResetPassword == null ? void 0 : onResetPassword(params, options));\n    }, [\n        onResetPassword\n    ]);\n    const updatePassword = useCallback(async (params, options)=>{\n        return await (onUpdatePassword == null ? void 0 : onUpdatePassword(params, options));\n    }, [\n        onUpdatePassword\n    ]);\n    const getToken = useCallback(async ()=>{\n        return onGetToken == null ? void 0 : onGetToken();\n    }, [\n        onGetToken\n    ]);\n    const value = {\n        isAuthenticated,\n        isLoggingIn: isAuthenticated && !user,\n        isLoading,\n        user,\n        signUp,\n        logIn,\n        logOut,\n        verifyOtp,\n        loadUser,\n        getToken,\n        resetPassword,\n        updatePassword\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthContext.Provider, {\n        value,\n        children\n    });\n};\nvar useAuth = ()=>{\n    const context = useContext(AuthContext);\n    if (context === null) {\n        throw new Error(\"Auth context missing, did you forget to wrap your app in AuthProvider?\");\n    }\n    return context;\n};\nvar useCurrentUser = ()=>{\n    return useAuth().user;\n};\nvar useLogin = ({ action = \"logIn\" } = {})=>{\n    const auth = useAuth();\n    const fn = auth[action] || auth[\"logIn\"];\n    return (0,_saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.usePromise)(fn);\n};\nvar useSignUp = ()=>{\n    const { signUp } = useAuth();\n    return (0,_saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.usePromise)(signUp);\n};\nvar useOtp = ()=>{\n    const { verifyOtp } = useAuth();\n    return (0,_saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.usePromise)(verifyOtp);\n};\nvar useResetPassword = ()=>{\n    const { resetPassword } = useAuth();\n    return (0,_saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.usePromise)(resetPassword);\n};\nvar useUpdatePassword = ()=>{\n    const { updatePassword } = useAuth();\n    return (0,_saas_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.usePromise)(updatePassword);\n};\n// src/components/forms/forgot-password-form.tsx\n\n// src/components/login-button.tsx\n\n\n\nvar LoginButton = (props)=>{\n    var _a, _b;\n    const theme = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n    const defaultProps = {\n        h: \"10\",\n        variant: \"solid\",\n        colorScheme: \"primary\",\n        ...(_b = (_a = theme.components) == null ? void 0 : _a.LoginButton) == null ? void 0 : _b.defaultProps\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.SubmitButton, {\n        ...defaultProps,\n        ...props\n    });\n};\nLoginButton.displayName = \"LoginButton\";\n// src/components/forms/forgot-password-form.tsx\n\nvar ForgotPasswordForm = ({ children, ...formProps })=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Form, {\n        defaultValues: {\n            email: \"\"\n        },\n        ...formProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.FormLayout, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"email\",\n                    label: \"Your email address\",\n                    type: \"email\",\n                    rules: {\n                        required: true\n                    },\n                    autoComplete: \"email\"\n                }),\n                children,\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginButton, {\n                    type: \"submit\",\n                    width: \"full\",\n                    children: \"Reset password\"\n                })\n            ]\n        })\n    });\n};\nForgotPasswordForm.displayName = \"ForgotPasswordForm\";\n// src/components/forms/update-password-form.tsx\n\n\n\nvar UpdatePasswordForm = ({ children, ...formProps })=>{\n    const formRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const validatePassword = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((confirmPassword)=>{\n        var _a;\n        const password = (_a = formRef.current) == null ? void 0 : _a.getValues(\"password\");\n        return confirmPassword === password;\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Form, {\n        defaultValues: {\n            password: \"\",\n            confirmPassword: \"\"\n        },\n        formRef,\n        ...formProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.FormLayout, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"password\",\n                    label: \"New password\",\n                    type: \"password\",\n                    rules: {\n                        required: true\n                    },\n                    autoComplete: \"current-password\"\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"confirmPassword\",\n                    label: \"Confirm password\",\n                    type: \"password\",\n                    rules: {\n                        validate: validatePassword\n                    },\n                    autoComplete: \"new-password\"\n                }),\n                children,\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginButton, {\n                    type: \"submit\",\n                    width: \"full\",\n                    children: \"Update password\"\n                })\n            ]\n        })\n    });\n};\nUpdatePasswordForm.displayName = \"UpdatePasswordForm\";\n// src/components/forms/magic-link-form.tsx\n\n\nvar MagicLinkForm = ({ children, ...formProps })=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Form, {\n        defaultValues: {\n            email: \"\"\n        },\n        ...formProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.FormLayout, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"email\",\n                    label: \"Email\",\n                    type: \"email\",\n                    rules: {\n                        required: true\n                    },\n                    autoComplete: \"email\"\n                }),\n                children,\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginButton, {\n                    type: \"submit\",\n                    width: \"full\",\n                    children: \"Continue with Email\"\n                })\n            ]\n        })\n    });\n};\nMagicLinkForm.displayName = \"MagicLinkForm\";\n// src/components/forms/otp-form.tsx\n\n\nvar OtpForm = ({ pinLength = 4, defaultValues, children, ...formProps })=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Form, {\n        defaultValues: {\n            otp: \"\"\n        },\n        ...formProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.FormLayout, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.PinField, {\n                    name: \"otp\",\n                    label: \"Your verification code\",\n                    help: \"You can find your one-time password in the Google Authenticator or Authy app.\",\n                    type: \"pin\",\n                    pinLength,\n                    rules: {\n                        required: true\n                    }\n                }),\n                children,\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginButton, {\n                    type: \"submit\",\n                    width: \"full\",\n                    children: \"Verify\"\n                })\n            ]\n        })\n    });\n};\nOtpForm.displayName = \"OtpForm\";\n// src/components/forms/password-form.tsx\n\n\nvar PasswordForm = ({ defaultValues, children, ...formProps })=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Form, {\n        defaultValues: {\n            email: \"\",\n            password: \"\"\n        },\n        ...formProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.FormLayout, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"email\",\n                    label: \"Email\",\n                    type: \"email\",\n                    rules: {\n                        required: true\n                    },\n                    autoComplete: \"email\"\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_saas_ui_forms__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                    name: \"password\",\n                    label: \"Password\",\n                    type: \"password\",\n                    rules: {\n                        required: true\n                    },\n                    autoComplete: \"current-password\"\n                }),\n                children,\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginButton, {\n                    type: \"submit\",\n                    width: \"full\",\n                    children: \"Log in\"\n                })\n            ]\n        })\n    });\n};\nPasswordForm.displayName = \"PasswordForm\";\n// src/components/forms/providers.tsx\n\n\n// src/components/provider-button.tsx\n\n\nvar ProviderButton = (props)=>{\n    var _a, _b;\n    const { children, ...rest } = props;\n    const theme = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n    const defaultProps = {\n        h: 10,\n        variant: \"outline\",\n        ...(_b = (_a = theme.components) == null ? void 0 : _a.ProviderButton) == null ? void 0 : _b.defaultProps\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n        ...defaultProps,\n        ...rest,\n        children\n    });\n};\nProviderButton.displayName = \"ProviderButton\";\n// src/components/forms/providers.tsx\n\nvar Providers = ({ providers, onSignIn, labelPrefix = \"Continue with\", ...rest })=>{\n    if (!providers) {\n        return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.SimpleGrid, {\n        spacing: 4,\n        ...rest,\n        children: Object.entries(providers).map(([id, provider])=>{\n            const { name, icon, color, scopes, ...rest2 } = provider;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(ProviderButton, {\n                color,\n                leftIcon: icon && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Icon, {\n                    as: icon\n                }),\n                ...rest2,\n                onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_8__.callAllHandlers)(rest2.onClick, ()=>onSignIn(id, {\n                        scopes\n                    })),\n                children: [\n                    labelPrefix,\n                    \" \",\n                    name\n                ]\n            }, id);\n        })\n    });\n};\nProviders.displayName = \"Providers\";\n// src/components/auth-form.tsx\n\n\n\nvar [StylesProvider, useStyles] = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.createStylesContext)(\"SuiAuthForm\");\nvar AuthFormContainer = (props)=>{\n    const { children } = props;\n    const styles = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.useMultiStyleConfig)(\"SuiAuthForm\", props);\n    const containerProps = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.omitThemingProps)(props);\n    const containerStyles = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"stretch\",\n        width: \"full\",\n        ...styles.container\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.chakra.div, {\n            __css: containerStyles,\n            ...containerProps,\n            className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_13__.cx)(\"sui-auth-form\", props.className),\n            children\n        })\n    });\n};\nAuthFormContainer.displayName = \"AuthFormContainer\";\nvar AuthFormDivider = (props)=>{\n    const { label, ...rest } = props;\n    const styles = useStyles();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.HStack, {\n        color: \"muted\",\n        fontSize: \"sm\",\n        my: \"4\",\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.Divider, {\n                ...rest,\n                sx: styles.divider\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Text, {\n                flexShrink: \"0\",\n                children: label\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.Divider, {\n                ...rest,\n                sx: styles.divider\n            })\n        ]\n    });\n};\nvar AuthFormTitle = ({ children, ...rest })=>{\n    const styles = useStyles();\n    const titleStyles = {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        mb: 8,\n        ...styles.title\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.chakra.h2, {\n        __css: titleStyles,\n        ...rest,\n        className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_13__.cx)(\"sui-auth-form__title\", rest.className),\n        children\n    });\n};\nAuthFormTitle.displayName = \"AuthFormTitle\";\n// src/components/auth.tsx\n\n\n// src/components/success.tsx\n\n\nvar AuthFormSuccess = ({ title, description, ...rest })=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_17__.Alert, {\n        status: \"success\",\n        variant: \"subtle\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        ...rest,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_18__.AlertIcon, {\n                boxSize: \"40px\",\n                mr: 0\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_19__.AlertTitle, {\n                mt: 4,\n                mb: 1,\n                fontSize: \"lg\",\n                children: title\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_20__.AlertDescription, {\n                maxWidth: \"sm\",\n                fontSize: \"md\",\n                children: description\n            })\n        ]\n    });\n};\nAuthFormSuccess.displayName = \"AuthFormSuccess\";\n// src/components/login-view.tsx\n\nvar LoginView = (props)=>{\n    const { title = \"Log in\", ...rest } = props;\n    if (props.type === \"password\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PasswordView, {\n            title,\n            ...rest\n        });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MagicLinkView, {\n        title,\n        ...rest\n    });\n};\nvar SignupView = (props)=>{\n    const { title = \"Sign up\", ...rest } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginView, {\n        action: \"signUp\",\n        title,\n        ...rest\n    });\n};\nSignupView.displayName = \"SignupView\";\nvar PasswordView = (props)=>{\n    const { onSuccess, onError, renderSuccess = ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n            title: \"Success!\",\n            description: \"Check your mailbox to verify your account.\"\n        }), action, title, providers, providerLabel, dividerLabel, footer, redirectUrl, ...formProps } = props;\n    const [{ isResolved, data }, submit] = useLogin({\n        action\n    });\n    const handleSubmit = (params)=>{\n        return submit(params, {\n            redirectTo: redirectUrl\n        }).then(onSuccess).catch(onError);\n    };\n    const isSuccess = isResolved && action === \"signUp\";\n    if (isResolved && action === \"signUp\") {\n        return renderSuccess(data);\n    }\n    const wrapperProps = {\n        providers,\n        title,\n        providerLabel,\n        dividerLabel,\n        footer,\n        redirectUrl\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormWrapper, {\n        ...wrapperProps,\n        children: isSuccess ? renderSuccess(data) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PasswordForm, {\n            onSubmit: handleSubmit,\n            ...formProps\n        })\n    });\n};\nvar MagicLinkView = (props)=>{\n    const { onSuccess, onError, renderSuccess = (data2)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n            title: \"Check your mailbox\",\n            description: `We've sent a magic link to ${(data2 == null ? void 0 : data2.email) || \"your email address\"}`\n        }), title, action, providers, providerLabel, dividerLabel, footer, redirectUrl, ...formProps } = props;\n    const [{ isResolved, data }, submit] = useLogin({\n        action\n    });\n    const handleSubmit = ({ email })=>{\n        return submit({\n            email\n        }, {\n            redirectTo: redirectUrl\n        }).then(onSuccess).catch(onError);\n    };\n    const wrapperProps = {\n        providers,\n        title,\n        providerLabel,\n        dividerLabel,\n        footer,\n        redirectUrl\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormWrapper, {\n        ...wrapperProps,\n        children: isResolved ? renderSuccess(data) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MagicLinkForm, {\n            ...formProps,\n            onSubmit: handleSubmit\n        })\n    });\n};\nLoginView.displayName = \"LoginView\";\nvar AuthFormWrapper = (props)=>{\n    const { providers, title, providerLabel = \"Continue with\", dividerLabel = \"or continue with\", footer, children, redirectUrl, ...rest } = props;\n    const { logIn } = useAuth();\n    const signInWith = (provider)=>{\n        return logIn({\n            provider\n        }, {\n            redirectTo: redirectUrl\n        });\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(AuthFormContainer, {\n        ...rest,\n        children: [\n            typeof title === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormTitle, {\n                children: title\n            }) : title,\n            providers && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Providers, {\n                        providers,\n                        labelPrefix: providerLabel,\n                        onSignIn: signInWith\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormDivider, {\n                        label: dividerLabel\n                    })\n                ]\n            }),\n            children,\n            footer\n        ]\n    });\n};\nAuthFormWrapper.displayName = \"AuthForm\";\n// src/components/forgot-password-view.tsx\n\nvar ForgotPasswordView = (props)=>{\n    const { title = \"Forgot password\", footer, onSuccess, onError, onValidationError, renderSuccess = ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n            title: \"Password reset requested\",\n            description: \"Please check your email for instructions to reset your password.\"\n        }), redirectUrl, ...rest } = props;\n    const [{ data, isResolved }, submit] = useResetPassword();\n    const handleSubmit = (params)=>{\n        return submit(params, {\n            redirectTo: redirectUrl\n        }).then(onSuccess).catch(onError);\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(AuthFormContainer, {\n        children: [\n            typeof title === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormTitle, {\n                children: title\n            }) : title,\n            isResolved ? renderSuccess(data) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ForgotPasswordForm, {\n                ...rest,\n                onError: onValidationError,\n                onSubmit: handleSubmit\n            }),\n            footer\n        ]\n    });\n};\nForgotPasswordView.displayName = \"ForgotPasswordView\";\n// src/components/update-password-view.tsx\n\nvar UpdatePasswordView = (props)=>{\n    const { title = \"Choose a new password\", footer, onSuccess, onError, onValidationError, renderSuccess = ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n            title: \"Your password has been updated\",\n            description: \"You can now log in with your new password.\"\n        }), ...rest } = props;\n    const [{ data, isResolved }, submit] = useUpdatePassword();\n    const handleSubmit = ({ password })=>{\n        return submit({\n            password\n        }).then(onSuccess).catch(onError);\n    };\n    const isSuccess = isResolved && data;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(AuthFormContainer, {\n        children: [\n            typeof title === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormTitle, {\n                children: title\n            }) : title,\n            isSuccess ? renderSuccess(data) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(UpdatePasswordForm, {\n                ...rest,\n                onError: onValidationError,\n                onSubmit: handleSubmit\n            }),\n            footer\n        ]\n    });\n};\nUpdatePasswordView.displayName = \"UpdatePasswordView\";\n// src/components/otp-view.tsx\n\nvar OtpView = (props)=>{\n    const { title = \"One-time password\", footer, onSuccess, onError, onValidationError, renderSuccess = ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n            title: \"Verification succesful\",\n            description: \"You are now logged in.\"\n        }), ...rest } = props;\n    const [{ data }, submit] = useOtp();\n    const handleSubmit = async (params)=>{\n        return submit(params).then(onSuccess).catch(onError);\n    };\n    const form = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(OtpForm, {\n        ...rest,\n        onError: onValidationError,\n        onSubmit: handleSubmit\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(AuthFormContainer, {\n        children: [\n            typeof title === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormTitle, {\n                children: title\n            }) : title,\n            data ? renderSuccess(data) : form,\n            footer\n        ]\n    });\n};\nOtpView.displayName = \"OtpView\";\n// src/components/auth.tsx\n\nvar VIEWS = {\n    LOGIN: \"login\",\n    SIGNUP: \"signup\",\n    FORGOT_PASSWORD: \"forgot_password\",\n    UPDATE_PASSWORD: \"update_password\",\n    OTP: \"otp\"\n};\nvar defaultTranslations = {\n    signup: \"Sign up\",\n    signupSubmit: \"Sign up\",\n    signupSuccess: \"Success!\",\n    signupSuccessDescription: \"Check your mailbox to verify your account.\",\n    login: \"Log in\",\n    loginSubmit: \"Log in\",\n    magicLinkSuccess: \"Check your mailbox\",\n    magicLinkSuccessDescription: \"We have sent a magic link to {email}.\",\n    yourEmail: \"your email address\",\n    forgotPassword: \"Forgot password?\",\n    forgotPasswordSubmit: \"Send reset link\",\n    forgotPasswordSuccess: \"Password reset requested\",\n    forgotPasswordSuccessDescription: \"Please check your email for instructions to reset your password.\",\n    updatePassword: \"Update password\",\n    updatePasswordSubmit: \"Update password\",\n    updatePasswordSuccess: \"Your password has been updated\",\n    updatePasswordSuccessDescription: \"You can now log in with your new password.\",\n    backToLogin: \"Back to log in\",\n    noAccount: \"No account yet?\",\n    haveAccount: \"Already have an account?\",\n    otp: \"One-time password\",\n    otpSubmit: \"Verify\",\n    otpHelp: \"You can find your one-time password in the Google Authenticator or Authy app.\",\n    continueWith: \"Continue with\",\n    orContinueWith: \"or continue with\",\n    verificationCode: \"Your verification code\",\n    email: \"Email\",\n    password: \"Password\",\n    newPassword: \"New password\",\n    confirmPassword: \"Confirm password\"\n};\nvar tpl = (value, data)=>{\n    return value.replace(/{(\\w*)}/g, function(m, key) {\n        return Object.prototype.hasOwnProperty.call(data, key) ? data[key] : \"\";\n    });\n};\nvar Auth = (props)=>{\n    const { view, defaultView = VIEWS.LOGIN, onViewChange, providers, title, translations: translationsProp, signupLink, loginLink, forgotLink, backLink, onError, onSuccess, redirectUrl, fields, ...rest } = props;\n    const translations = {\n        ...defaultTranslations,\n        ...translationsProp\n    };\n    const { type } = rest;\n    const [authView, setAuthView] = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_21__.useControllableState)({\n        defaultValue: defaultView,\n        value: view,\n        onChange: (view2)=>{\n            onViewChange == null ? void 0 : onViewChange(view2);\n        }\n    });\n    const errorHandler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((view2)=>(error)=>{\n            if (authView === view2 && onError) {\n                onError(view2, error);\n            }\n        }, [\n        authView\n    ]);\n    const successHandler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((view2)=>(data)=>{\n            if (authView === view2 && onSuccess) {\n                onSuccess(view2, data);\n            }\n        }, [\n        authView\n    ]);\n    const getRedirectUrl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((view2)=>{\n        if (typeof redirectUrl === \"function\") {\n            return redirectUrl(view2);\n        }\n        return redirectUrl;\n    }, [\n        redirectUrl\n    ]);\n    switch(authView){\n        case VIEWS.LOGIN:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LoginView, {\n                providers,\n                onError: errorHandler(VIEWS.LOGIN),\n                onSuccess: successHandler(VIEWS.LOGIN),\n                footer: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthLink, {\n                    onClick: ()=>setAuthView(VIEWS.SIGNUP),\n                    label: translations.noAccount,\n                    link: signupLink != null ? signupLink : translations.signup\n                }),\n                redirectUrl: getRedirectUrl(VIEWS.LOGIN),\n                title: title != null ? title : translations.login,\n                providerLabel: translations.continueWith,\n                dividerLabel: translations.orContinueWith,\n                fields: {\n                    ...fields,\n                    email: {\n                        label: translations.email,\n                        ...fields == null ? void 0 : fields.email\n                    },\n                    password: {\n                        label: translations.password,\n                        ...fields == null ? void 0 : fields.password\n                    },\n                    submit: {\n                        children: translations.loginSubmit,\n                        ...fields == null ? void 0 : fields.submit\n                    }\n                },\n                renderSuccess: type === \"magiclink\" ? (data)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n                        title: translations.magicLinkSuccess,\n                        description: tpl(translations.magicLinkSuccessDescription, {\n                            email: (data == null ? void 0 : data.email) || translations.yourEmail\n                        })\n                    }) : void 0,\n                ...rest,\n                children: type === \"password\" && (!forgotLink || typeof forgotLink === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_22__.Link, {\n                    fontSize: \"md\",\n                    color: \"muted\",\n                    float: \"right\",\n                    onClick: ()=>setAuthView(VIEWS.FORGOT_PASSWORD),\n                    children: forgotLink != null ? forgotLink : translations.forgotPassword\n                }) : forgotLink)\n            });\n        case VIEWS.SIGNUP:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SignupView, {\n                providers,\n                onError: errorHandler(VIEWS.SIGNUP),\n                onSuccess: successHandler(VIEWS.SIGNUP),\n                footer: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthLink, {\n                    onClick: ()=>setAuthView(VIEWS.LOGIN),\n                    label: translations.haveAccount,\n                    link: loginLink != null ? loginLink : translations.login\n                }),\n                redirectUrl: getRedirectUrl(VIEWS.SIGNUP),\n                title: title != null ? title : translations.signup,\n                providerLabel: translations.continueWith,\n                dividerLabel: translations.orContinueWith,\n                fields: {\n                    ...fields,\n                    email: {\n                        label: translations.email,\n                        ...fields == null ? void 0 : fields.label\n                    },\n                    password: {\n                        label: translations.password,\n                        ...fields == null ? void 0 : fields.password\n                    },\n                    submit: {\n                        children: translations.signupSubmit,\n                        ...fields == null ? void 0 : fields.submit\n                    }\n                },\n                renderSuccess: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n                        title: translations.signupSuccess,\n                        description: translations.signupSuccessDescription\n                    }),\n                ...rest\n            });\n        case VIEWS.FORGOT_PASSWORD:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ForgotPasswordView, {\n                onError: errorHandler(VIEWS.FORGOT_PASSWORD),\n                onSuccess: successHandler(VIEWS.FORGOT_PASSWORD),\n                footer: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthLink, {\n                    onClick: ()=>setAuthView(VIEWS.LOGIN),\n                    link: backLink != null ? backLink : translations.backToLogin\n                }),\n                redirectUrl: getRedirectUrl(VIEWS.FORGOT_PASSWORD),\n                title: title != null ? title : translations.forgotPassword,\n                fields: {\n                    ...fields,\n                    email: {\n                        label: translations.email,\n                        ...fields == null ? void 0 : fields.email\n                    },\n                    submit: {\n                        children: translations.forgotPasswordSubmit,\n                        ...fields == null ? void 0 : fields.submit\n                    }\n                },\n                renderSuccess: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n                        title: translations.forgotPasswordSuccess,\n                        description: translations.forgotPasswordSuccessDescription\n                    }),\n                ...rest\n            });\n        case VIEWS.UPDATE_PASSWORD:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(UpdatePasswordView, {\n                onError: errorHandler(VIEWS.UPDATE_PASSWORD),\n                onSuccess: successHandler(VIEWS.UPDATE_PASSWORD),\n                title: title != null ? title : translations.updatePassword,\n                fields: {\n                    ...fields,\n                    password: {\n                        label: translations.newPassword,\n                        ...fields == null ? void 0 : fields.password\n                    },\n                    confirmPassword: {\n                        label: translations.confirmPassword,\n                        ...fields == null ? void 0 : fields.confirmPassword\n                    },\n                    submit: {\n                        children: translations.updatePasswordSubmit,\n                        ...fields == null ? void 0 : fields.submit\n                    }\n                },\n                renderSuccess: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthFormSuccess, {\n                        title: translations.updatePasswordSuccess,\n                        description: translations.updatePasswordSuccessDescription\n                    }),\n                ...rest\n            });\n        case VIEWS.OTP:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(OtpView, {\n                onError: errorHandler(VIEWS.OTP),\n                onSuccess: successHandler(VIEWS.OTP),\n                title: title != null ? title : translations.otp,\n                fields: {\n                    ...fields,\n                    otp: {\n                        label: translations.verificationCode,\n                        help: translations.otpHelp,\n                        ...fields == null ? void 0 : fields.otp\n                    },\n                    submit: {\n                        children: translations.otpSubmit,\n                        ...fields == null ? void 0 : fields.submit\n                    }\n                },\n                ...rest\n            });\n    }\n    return null;\n};\nvar AuthLink = ({ label, link, onClick })=>{\n    const styles = {\n        textAlign: \"center\",\n        pt: 4,\n        fontSize: \"md\"\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.chakra.div, {\n        __css: styles,\n        children: [\n            label && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.chakra.span, {\n                color: \"muted\",\n                children: label\n            }),\n            \" \",\n            typeof link === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_22__.Link, {\n                onClick,\n                children: link\n            }) : link\n        ]\n    });\n};\nAuth.displayName = \"Auth\";\n// src/components/authenticated.tsx\n\n\nvar Authenticated = (props)=>{\n    const { children, onUnauthenticated, fallback } = props;\n    const auth = useAuth();\n    const { isAuthenticated, isLoading, isLoggingIn } = auth;\n    const unauthenticated = !isAuthenticated && !isLoading && !isLoggingIn;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (unauthenticated) {\n            onUnauthenticated == null ? void 0 : onUnauthenticated();\n        }\n    }, [\n        unauthenticated\n    ]);\n    if (isLoading || !isLoggingIn && !isAuthenticated) {\n        return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_23__.runIfFn)(fallback, auth);\n    }\n    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_23__.runIfFn)(children, auth);\n};\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@saas-ui+auth@3.4.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_react_7rfykrvlqxa6d4u7xvlitttv34/node_modules/@saas-ui/auth/dist/index.mjs\n");

/***/ })

};
;