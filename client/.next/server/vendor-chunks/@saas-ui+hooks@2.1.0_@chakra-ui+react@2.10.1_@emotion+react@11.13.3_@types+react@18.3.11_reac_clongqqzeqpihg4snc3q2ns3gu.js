"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu";
exports.ids = ["vendor-chunks/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu/node_modules/@saas-ui/hooks/dist/index.mjs":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu/node_modules/@saas-ui/hooks/dist/index.mjs ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLocalStorage: () => (/* binding */ useLocalStorage),\n/* harmony export */   useOutsideClick: () => (/* binding */ useOutsideClick),\n/* harmony export */   usePromise: () => (/* binding */ usePromise),\n/* harmony export */   useScript: () => (/* binding */ useScript),\n/* harmony export */   useScrollPosition: () => (/* binding */ useScrollPosition),\n/* harmony export */   useSteps: () => (/* binding */ useSteps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.14_@babel+core@7.25.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"(ssr)/./node_modules/.pnpm/@chakra-ui+hooks@2.4.1_react@18.3.1/node_modules/@chakra-ui/hooks/dist/esm/use-callback-ref.mjs\");\n/* __next_internal_client_entry_do_not_use__ useLocalStorage,useOutsideClick,usePromise,useScript,useScrollPosition,useSteps auto */ // src/use-promise.tsx\n\nfunction usePromise(fn) {\n    const [isLoading, setLoading] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isResolved, setResolved] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isRejected, setRejected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [error, setError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [data, setData] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const call = (...params)=>{\n        setLoading(true);\n        return fn(...params).then((data2)=>{\n            setData(data2);\n            setResolved(true);\n            setLoading(false);\n            return data2;\n        }).catch((err)=>{\n            setError(err);\n            setRejected(true);\n            setLoading(false);\n            throw err;\n        });\n    };\n    return [\n        {\n            error,\n            data,\n            isLoading,\n            isResolved,\n            isRejected\n        },\n        call\n    ];\n}\n// src/use-local-storage.ts\n\nvar isBrowser = \"undefined\" !== \"undefined\";\nfunction setItem(key, value) {\n    if (isBrowser && \"localStorage\" in window) {\n        return value === void 0 ? localStorage.removeItem(key) : localStorage.setItem(key, value);\n    }\n}\nfunction getItem(key) {\n    if (isBrowser && \"localStorage\" in window) {\n        return localStorage.getItem(key);\n    }\n}\nvar serializeJSON = (value)=>{\n    try {\n        return JSON.stringify(value);\n    } catch (e) {\n        throw new Error(\"useLocalStorage: failed to serialize the value to JSON\");\n    }\n};\nvar deserializeJSON = (value)=>{\n    try {\n        return value && JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n};\nvar triggerCustomEvent = (detail)=>{\n    const event = new CustomEvent(\"use-local-storage\", {\n        detail\n    });\n    window.dispatchEvent(event);\n};\nvar useLocalStorage = (key, defaultValue, options = {})=>{\n    const { serialize = serializeJSON, deserialize = deserializeJSON } = options;\n    const initRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        var _a;\n        return isBrowser ? deserialize((_a = getItem(key)) != null ? _a : void 0) : defaultValue;\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handler = (event)=>{\n            const isCustom = event instanceof CustomEvent;\n            const eventKey = isCustom ? event.detail.key : event.key;\n            const newValue = isCustom ? event.detail.newValue : event.newValue;\n            if ((isCustom || event.storageArea === window.localStorage) && eventKey === key) {\n                setValue(deserialize(newValue != null ? newValue : void 0));\n            }\n        };\n        if (isBrowser) {\n            window.addEventListener(\"storage\", handler);\n            window.addEventListener(\"use-local-storage\", handler);\n        }\n        return ()=>{\n            if (isBrowser) {\n                window.removeEventListener(\"storage\", handler);\n                window.removeEventListener(\"use-local-storage\", handler);\n            }\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!initRef.current) {\n            initRef.current = true;\n            return;\n        }\n        const serializedValue = serialize(value);\n        if (getItem(key) !== serializedValue) {\n            setItem(key, serializedValue);\n            triggerCustomEvent({\n                key,\n                newValue: serializedValue\n            });\n        }\n    }, [\n        value\n    ]);\n    return [\n        value === void 0 ? defaultValue : value,\n        setValue\n    ];\n};\n// src/use-steps.ts\n\nvar FIRST_STEP = 0;\nvar useSteps = ({ steps, initialStep = FIRST_STEP })=>{\n    const [completed, setCompleted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [index, setIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialStep);\n    const step = steps[index];\n    const inRange = (index2)=>{\n        if (typeof index2 === \"number\") {\n            if (index2 < FIRST_STEP) return FIRST_STEP;\n            if (index2 >= steps.length) return steps.length - 1;\n            return index2;\n        }\n        return steps.findIndex((step2)=>step2.id === index2) || FIRST_STEP;\n    };\n    const go = (nextStep)=>setIndex(inRange(nextStep));\n    const next = ()=>go(index + 1);\n    const prev = ()=>go(index - 1);\n    const setComplete = (completeStep = index)=>{\n        const completeStepIndex = inRange(completeStep);\n        const id = steps[completeStepIndex].id;\n        setCompleted([\n            .../* @__PURE__ */ new Set([\n                ...completed,\n                id\n            ])\n        ]);\n    };\n    const setUncomplete = (uncompleteStep = index)=>{\n        const uncompleteStepIndex = inRange(uncompleteStep);\n        const stepId = steps[uncompleteStepIndex].id;\n        setCompleted(completed.filter((id)=>id !== stepId));\n    };\n    const reset = (resetStep = initialStep)=>{\n        setIndex(resetStep);\n        setCompleted([]);\n    };\n    return {\n        setComplete,\n        completed,\n        index,\n        isLast: index === steps.length - 1,\n        navigation: {\n            next,\n            prev,\n            go\n        },\n        step,\n        setUncomplete,\n        reset\n    };\n};\n// src/use-script.ts\n\nvar useScript = (src)=>{\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(src ? \"loading\" : \"idle\");\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!src) {\n            setStatus(\"idle\");\n            return;\n        }\n        let script = document.querySelector(`script[src=\"${src}\"]`);\n        if (!script) {\n            script = document.createElement(\"script\");\n            script.src = src;\n            script.async = true;\n            script.setAttribute(\"data-status\", \"loading\");\n            document.body.appendChild(script);\n            const setAttributeFromEvent = (event)=>{\n                script == null ? void 0 : script.setAttribute(\"data-status\", event.type === \"load\" ? \"ready\" : \"error\");\n            };\n            script.addEventListener(\"load\", setAttributeFromEvent);\n            script.addEventListener(\"error\", setAttributeFromEvent);\n        } else {\n            setStatus(script.getAttribute(\"data-status\"));\n        }\n        const setStateFromEvent = (event)=>{\n            setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n        };\n        script.addEventListener(\"load\", setStateFromEvent);\n        script.addEventListener(\"error\", setStateFromEvent);\n        return ()=>{\n            if (script) {\n                script.removeEventListener(\"load\", setStateFromEvent);\n                script.removeEventListener(\"error\", setStateFromEvent);\n            }\n        };\n    }, [\n        src\n    ]);\n    return status;\n};\n// src/use-scroll-position.ts\n\nvar isBrowser2 = \"undefined\" !== \"undefined\";\nfunction getScrollPosition(element) {\n    if (!isBrowser2) return {\n        x: 0,\n        y: 0\n    };\n    if (!element) {\n        return {\n            x: window.scrollX,\n            y: window.scrollY\n        };\n    }\n    return {\n        x: element.scrollLeft,\n        y: element.scrollTop\n    };\n}\nvar useScrollPosition = (props)=>{\n    const { elementRef, delay = 30, callback, isEnabled } = props;\n    const position = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isEnabled ? getScrollPosition(elementRef == null ? void 0 : elementRef.current) : {\n        x: 0,\n        y: 0\n    });\n    let throttleTimeout = null;\n    const handler = ()=>{\n        const currPos = getScrollPosition(elementRef == null ? void 0 : elementRef.current);\n        if (typeof callback === \"function\") {\n            callback({\n                prevPos: position.current,\n                currPos\n            });\n        }\n        position.current = currPos;\n        throttleTimeout = null;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isEnabled) return;\n        const handleScroll = ()=>{\n            if (delay) {\n                if (throttleTimeout === null) {\n                    throttleTimeout = setTimeout(handler, delay);\n                }\n            } else {\n                handler();\n            }\n        };\n        const target = (elementRef == null ? void 0 : elementRef.current) || window;\n        target.addEventListener(\"scroll\", handleScroll);\n        return ()=>target.removeEventListener(\"scroll\", handleScroll);\n    }, [\n        elementRef == null ? void 0 : elementRef.current,\n        delay,\n        isEnabled\n    ]);\n    return position.current;\n};\n// src/use-outside-click.ts\n\n\nfunction useOutsideClick(props) {\n    const { ref, handler, enabled = true } = props;\n    const savedHandler = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(handler);\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        isPointerDown: false,\n        ignoreEmulatedMouseEvents: false\n    });\n    const state = stateRef.current;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!enabled) return;\n        const onPointerDown = (e)=>{\n            if (isValidEvent(e, ref)) {\n                state.isPointerDown = true;\n            }\n        };\n        const onMouseUp = (event)=>{\n            if (state.ignoreEmulatedMouseEvents) {\n                state.ignoreEmulatedMouseEvents = false;\n                return;\n            }\n            if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n                state.isPointerDown = false;\n                savedHandler(event);\n            }\n        };\n        const onTouchEnd = (event)=>{\n            state.ignoreEmulatedMouseEvents = true;\n            if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n                state.isPointerDown = false;\n                savedHandler(event);\n            }\n        };\n        const doc = getOwnerDocument(ref.current);\n        doc.addEventListener(\"mousedown\", onPointerDown, true);\n        doc.addEventListener(\"mouseup\", onMouseUp, true);\n        doc.addEventListener(\"touchstart\", onPointerDown, true);\n        doc.addEventListener(\"touchend\", onTouchEnd, true);\n        return ()=>{\n            doc.removeEventListener(\"mousedown\", onPointerDown, true);\n            doc.removeEventListener(\"mouseup\", onMouseUp, true);\n            doc.removeEventListener(\"touchstart\", onPointerDown, true);\n            doc.removeEventListener(\"touchend\", onTouchEnd, true);\n        };\n    }, [\n        handler,\n        ref,\n        savedHandler,\n        state,\n        enabled\n    ]);\n}\nfunction isValidEvent(event, ref) {\n    var _a;\n    const target = event.target;\n    if (target) {\n        const doc = getOwnerDocument(target);\n        if (!doc.contains(target)) return false;\n    }\n    return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\nfunction getOwnerDocument(node) {\n    var _a;\n    return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@saas-ui+hooks@2.1.0_@chakra-ui+react@2.10.1_@emotion+react@11.13.3_@types+react@18.3.11_reac_clongqqzeqpihg4snc3q2ns3gu/node_modules/@saas-ui/hooks/dist/index.mjs\n");

/***/ })

};
;